<?xml version="1.0" encoding="ISO-8859-1"?>

  
    
    
    
    
    
    
    
  
    
      
        Remove the hard deprecation on the o.a.a.f.component package.  It
        has been replaced by a softer form of deprecation (i.e. just notes
        in JavaDocs that do not affect the compile).
      
      
        New ContainerUtil available to make creating components easier.
      
    
    
      
        Undocumented release.  Not sure who, what, when, where, why or how.
      
    
    
      
        Updated the build jars.
      
      
        Add EMPTY_PARAMETERS constant object to the Parameters object.
      
      
        Made it configurable whether you print nested exceptions or not,
        and specify the depth that the AvalonFormatter will go with nested
        exceptions (defaults to 8).
      
      
        Update build to have a "compress.jars" property (defaults to
        true by default).
      
    
    
      
        Force build process to produce JDK 1.2 compliant class files.
        The last release had JDK 1.4 compliant class files, causing
        some classloaders to not work with the Framework.
      
    
    
      
        Improve and update the configuration javadocs to reflect the new
        namespace support.
      
      
        Deprecate the Loggable and AbstractLoggable classes, and replace
        them with LogEnabled and AbstractLogEnabled.
      
      
        Add an abstraction layer to the Logging implementation.  Thanks
        to Peter Donald for supplying the interface.
      
      
        Add Namespace support to Configuration files.
      
      
        Add AvalonFormatter that was in LogKit's heirarchy.  This way, we
        avoid circular dependancies.
      
      
        Previously resolve did not throw a ContextException. This made it
        difficult to indicate errors resolving objects. It now throws an
        exception thus allowing errors to be propogated and recorded.
      
      
        New ConfigurationSerializer to have your configuration objects persist.
      
      
        Upgrade DefaultConfigurationBuilder to be JAXP compliant,
        with the option to pass in your own XMLReader.
      
      
        Configuration objects are now Serializable.
      
      
        Add new support to ask a component manager if it has a component.
      
      
        Bug fixes for documentation
      
      
        Update developers docs to support new configuration methods.
      
      
        Improved "Hello World" documentation.
      
      
        Add UML diagrams supplied by Dieter Wimberger
      
      
        Add new author bios.
      
      
        Update build process to proposed standard.
      
      
        Added a method to Version to parse a Version from a string. Added accessor
        methods to Version to allow access to major/minor/micro components of version.
      
      
        Updated Version class to refer to micro version rather than revision. This 
        is to match the terminology for JDK versioning. This is just documentation 
        changes.
      
      
        Changed access of Enum and ValuedEnum constructors from public to
        protected, to prevent Enum users from breaking type-safety by adding new
        Enum items. This breaks backwards-compatibility in cases where Enum
        and ValuedEnum were being incorrectly used.
      
    
    
      
        Added new method to Component Manager and Selector for discovering
        if a Component exists inside or not.  Also augmented the default
        versions with the basic implementation to discover them.
      
      
        Added stylesheet to convert Stylebook markup to DocBook markup.
      
      
        Changed the documentation build process to use Cocoon to build
        the site.
      
      
        Added new "Developing with Avalon" book in DocBook format.
      
      
        Added Executable interface to activity package.
      
      
        Updated Resolvable interface to allow a ContextException to be thrown 
        on failure. 
      
      
        Add a makeReadOnly() method to the default implementations of Configuration, 
        Context and ComponentManager. Calling this method after the respective
        object has been filled will make the object read-only. This is a safety 
        precaution to stop code performing unwanted operations.
      
      
        Updated the javadocs of many of the classes.
      
      
        Update documentation so that it is more accurate and descriptive.
      
    
    
      
        Release 4.0b3
      
      
        Made DefaultComponentManager/Selector, DefaultContext, and
        DefaultConfiguration read-only to avoid bad programming
        practices by clients.
      
    
    
      
        Release 4.0b2
      
      
        Add makeReadOnly() method to default implementations to prevent
        alteration after they are set up.
      
      
        Removed the "throws Exception" from Disposable interface.  That was
        inadvertently left in the previous release.
      
      
        Added extra methods to Parameters to throw exceptions if the value
      does not exist.  They are the "no default value" methods.
      
      
        Updated javadocs for Framework.
      
    
    
      
        Official release
      
    
  